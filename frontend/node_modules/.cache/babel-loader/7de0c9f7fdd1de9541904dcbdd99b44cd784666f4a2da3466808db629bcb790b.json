{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Project_Blog\\\\MechanicAI_2\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport Sidebar from \"./components/sidebar/sidebar\";\nimport Main from \"./components/main/main\";\nimport Login from \"./components/auth/Login\";\nimport Signup from \"./components/auth/Signup\";\nimport { account } from \"./appwrite\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [resetChat, setResetChat] = useState(false);\n  const [selectedChatConversation, setSelectedChatConversation] = useState([]); // Add state for chat conversation\n\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const user = await account.get();\n        if (user) {\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error(\"Not logged in or session expired\", error);\n      }\n    };\n    checkSession();\n  }, []);\n  const handleLogout = async () => {\n    try {\n      await account.deleteSession(\"current\");\n      setIsAuthenticated(false);\n      alert(\"Logged out successfully!\");\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n      alert(\"Logout failed. Please try again.\");\n    }\n  };\n  const handleNewChat = () => {\n    setResetChat(prev => !prev);\n    setSelectedChatConversation([]); // Clear selected chat conversation\n  };\n  const handleChatSelection = conversation => {\n    setSelectedChatConversation(conversation); // Store selected chat conversation\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: () => setIsAuthenticated(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {\n          onSignup: () => setIsAuthenticated(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          onNewChat: handleNewChat,\n          onChatSelect: handleChatSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          resetChat: resetChat,\n          onLogout: handleLogout,\n          previousConversation: selectedChatConversation // Pass conversation to Main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BN8IJBTwiUfMQgpPDYAZJwyeKr4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","Sidebar","Main","Login","Signup","account","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","resetChat","setResetChat","selectedChatConversation","setSelectedChatConversation","checkSession","user","get","error","console","handleLogout","deleteSession","alert","handleNewChat","prev","handleChatSelection","conversation","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onSignup","to","onNewChat","onChatSelect","onLogout","previousConversation","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Project_Blog/MechanicAI_2/frontend/src/App.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Sidebar from \"./components/sidebar/sidebar\";\r\nimport Main from \"./components/main/main\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Signup from \"./components/auth/Signup\";\r\nimport { account } from \"./appwrite\";\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [resetChat, setResetChat] = useState(false);\r\n  const [selectedChatConversation, setSelectedChatConversation] = useState([]); // Add state for chat conversation\r\n\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      try {\r\n        const user = await account.get();\r\n        if (user) {\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Not logged in or session expired\", error);\r\n      }\r\n    };\r\n\r\n    checkSession();\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await account.deleteSession(\"current\");\r\n      setIsAuthenticated(false);\r\n      alert(\"Logged out successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Logout failed:\", error);\r\n      alert(\"Logout failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setResetChat((prev) => !prev);\r\n    setSelectedChatConversation([]); // Clear selected chat conversation\r\n  };\r\n\r\n  const handleChatSelection = (conversation) => {\r\n    setSelectedChatConversation(conversation); // Store selected chat conversation\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <Routes>\r\n        <Route\r\n          path=\"/login\"\r\n          element={<Login onLogin={() => setIsAuthenticated(true)} />}\r\n        />\r\n        <Route\r\n          path=\"/signup\"\r\n          element={<Signup onSignup={() => setIsAuthenticated(true)} />}\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n      </Routes>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        path=\"/\"\r\n        element={\r\n          <>\r\n            <Sidebar onNewChat={handleNewChat} onChatSelect={handleChatSelection} />\r\n            <Main\r\n              resetChat={resetChat}\r\n              onLogout={handleLogout}\r\n              previousConversation={selectedChatConversation} // Pass conversation to Main\r\n            />\r\n          </>\r\n        }\r\n      />\r\n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
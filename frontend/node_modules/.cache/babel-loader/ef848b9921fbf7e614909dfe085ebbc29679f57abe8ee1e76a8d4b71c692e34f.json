{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Project_Blog\\\\MechanicAI_2\\\\frontend\\\\src\\\\components\\\\sidebar\\\\sidebar.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useRef } from \"react\";\n// import \"./sidebar.css\";\n// import { assets } from \"../../assets/assets\";\n// import axios from \"axios\";\n// import { account } from \"../../appwrite\"; // Import the account object from Appwrite.js\n\n// const Sidebar = ({ onNewChat, onChatSelect }) => {\n//   const [extended, setExtended] = useState(false);\n//   const [chats, setChats] = useState([]); // Chat sessions\n//   const [selectedChat, setSelectedChat] = useState(null); // Selected chat details\n//   const [loading, setLoading] = useState(false); // Loading state\n//   const [userId, setUserId] = useState(null); // User ID\n//   const [offset, setOffset] = useState(0); // Offset for chat pagination\n//   const [hasMore, setHasMore] = useState(true); // Flag to check if more chats are available\n\n//   useEffect(() => {\n//     const fetchUserId = async () => {\n//       try {\n//         const user = await account.get(); // Fetch the logged-in user from Appwrite\n//         setUserId(user?.$id || null); // Save the userId\n//       } catch (error) {\n//         console.error(\"Error fetching user:\", error);\n//       }\n//     };\n\n//     fetchUserId();\n//   }, []);\n\n//   // Fetch chat sessions with pagination\n//   const fetchChats = async (loadMore = false) => {\n//     if (!userId || loading || (!hasMore && loadMore)) return;\n\n//     try {\n//       setLoading(true);\n//       const response = await axios.post(\"http://localhost:5000/api/chats\", { userId, offset });\n//       const { chatList, offset: newOffset } = response.data;\n\n//       if (loadMore) {\n//         setChats((prevChats) => [...prevChats, ...chatList]); // Append new chats\n//       } else {\n//         setChats(chatList); // Set initial chats\n//       }\n\n//       setOffset(newOffset); // Update offset for the next call\n//       setHasMore(chatList.length === 10); // If less than 10 items, no more chats\n//     } catch (error) {\n//       console.error(\"Error fetching chats:\", error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Initial fetch\n//   useEffect(() => {\n//     if (userId) {\n//       fetchChats();\n//     }\n//   }, [userId]);\n\n//   const fetchChatDetails = async (chatId) => {\n//     try {\n//       setLoading(true);\n//       const response = await axios.post(\"http://localhost:5000/api/history\", {\n//         userId,\n//         sessionId: chatId,\n//       });\n//       if (response.data && response.data.conversation) {\n//         onChatSelect(response.data.conversation); // Pass conversation to App\n//         setSelectedChat(chatId); // Mark as selected\n//       } else {\n//         console.error(\"Invalid response structure:\", response.data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching chat details:\", error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"sidebar\">\n//       <div className=\"top\">\n//         <img\n//           onClick={() => setExtended((prev) => !prev)}\n//           className=\"menu\"\n//           src={assets.menu_icon}\n//           alt=\"menu\"\n//         />\n//         <div className=\"new-chat\" onClick={onNewChat}>\n//           <img src={assets.plus_icon} alt=\"new chat\" />\n//           {extended ? <p>New Chat</p> : null}\n//         </div>\n//       </div>\n\n//       {extended && (\n//         <div className=\"recent\">\n//           <p className=\"recent-title\">Recent</p>\n//           <div className=\"recent-list\">\n//             {chats.map((chat) => (\n//               <div\n//                 key={chat.sessionId}\n//                 className={`recent-entry ${selectedChat === chat.sessionId ? \"selected\" : \"\"}`}\n//                 onClick={() => fetchChatDetails(chat.sessionId)}\n//               >\n//                 <img src={assets.message_icon} alt=\"chat icon\" />\n//                 <p>{chat.title || \"Untitled Chat\"}</p>\n//               </div>\n//             ))}\n//           </div>\n//           {hasMore && !loading && (\n//             <button className=\"load-more\" onClick={() => fetchChats(true)}>\n//               Load More\n//             </button>\n//           )}\n//           {loading && <p>Loading more chats...</p>}\n//           {!hasMore && <p>No more chats available</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Sidebar;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./sidebar.css\";\nimport { assets } from \"../../assets/assets\";\nimport axios from \"axios\";\nimport { account } from \"../../appwrite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  onNewChat,\n  onChatSelect\n}) => {\n  _s();\n  const [extended, setExtended] = useState(false);\n  const [chats, setChats] = useState([]); // Chat sessions\n  const [selectedChat, setSelectedChat] = useState(null); // Selected chat details\n  const [loading, setLoading] = useState(false); // Loading state\n  const [userId, setUserId] = useState(null); // User ID\n  const [offset, setOffset] = useState(0); // Offset for chat pagination\n  const [hasMore, setHasMore] = useState(true); // Flag to check if more chats are available\n  const [menuOpen, setMenuOpen] = useState(null); // Track open menu for each chat\n  const dropdownRef = useRef(null); // Reference to dropdown\n\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        const user = await account.get(); // Fetch the logged-in user from Appwrite\n        setUserId((user === null || user === void 0 ? void 0 : user.$id) || null); // Save the userId\n      } catch (error) {\n        console.error(\"Error fetching user:\", error);\n      }\n    };\n    fetchUserId();\n  }, []);\n\n  // Fetch chat sessions with pagination\n  const fetchChats = async (loadMore = false) => {\n    if (!userId || loading || !hasMore && loadMore) return;\n    try {\n      setLoading(true);\n      const response = await axios.post(\"http://localhost:5000/api/chats\", {\n        userId,\n        offset\n      });\n      const {\n        chatList,\n        offset: newOffset\n      } = response.data;\n      if (loadMore) {\n        setChats(prevChats => [...prevChats, ...chatList]); // Append new chats\n      } else {\n        setChats(chatList); // Set initial chats\n      }\n      setOffset(newOffset); // Update offset for the next call\n      setHasMore(chatList.length === 10); // If less than 10 items, no more chats\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initial fetch\n  useEffect(() => {\n    if (userId) {\n      fetchChats();\n    }\n  }, [userId]);\n  const fetchChatDetails = async chatId => {\n    try {\n      setLoading(true);\n      const response = await axios.post(\"http://localhost:5000/api/history\", {\n        userId,\n        sessionId: chatId\n      });\n      if (response.data && response.data.conversation) {\n        onChatSelect(response.data.conversation); // Pass conversation to App\n        setSelectedChat(chatId); // Mark as selected\n      } else {\n        console.error(\"Invalid response structure:\", response.data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chat details:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMenuClick = chatId => {\n    setMenuOpen(prev => prev === chatId ? null : chatId); // Toggle menu\n  };\n  const handleRename = chatId => {\n    console.log(\"Rename chat:\", chatId);\n    setMenuOpen(null); // Close the menu\n  };\n\n  // const handleDelete = (chatId) => {\n  //   console.log(\"Delete chat:\", chatId);\n  //   setMenuOpen(null); // Close the menu\n  // };\n\n  const handleDelete = async chatId => {\n    try {\n      setLoading(true); // Set loading state while deleting\n      // Make a POST request to the backend to delete the chat\n      const response = await axios.post(\"http://localhost:5000/api/delete\", {\n        userId,\n        sessionId: chatId // Send the chatId to the backend for deletion\n      });\n      if (response.data.success) {\n        // Successfully deleted chat, remove it from the UI\n        setChats(prevChats => prevChats.filter(chat => chat.sessionId !== chatId));\n        setSelectedChat(null); // Deselect the deleted chat\n      } else {\n        console.error(\"Failed to delete the chat:\", response.data.error);\n      }\n    } catch (error) {\n      console.error(\"Error deleting chat:\", error);\n    } finally {\n      setMenuOpen(null); // Close the menu\n      setLoading(false); // Reset loading state\n    }\n  };\n\n  // Close dropdown on outside click\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setMenuOpen(null); // Close the menu\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => setExtended(prev => !prev),\n        className: \"menu\",\n        src: assets.menu_icon,\n        alt: \"menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-chat\",\n        onClick: onNewChat,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: assets.plus_icon,\n          alt: \"new chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), extended ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 23\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), extended && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"recent-title\",\n        children: \"Recent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-list\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recent-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-content ${selectedChat === chat.sessionId ? \"selected\" : \"\"}`,\n            onClick: () => fetchChatDetails(chat.sessionId),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: chat.title || \"Untitled Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu-icon\",\n            ref: dropdownRef,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              onClick: () => handleMenuClick(chat.sessionId),\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"12\",\n                cy: \"5\",\n                r: \"2\",\n                fill: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"12\",\n                cy: \"12\",\n                r: \"2\",\n                fill: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"12\",\n                cy: \"19\",\n                r: \"2\",\n                fill: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), menuOpen === chat.sessionId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => handleRename(chat.sessionId),\n                children: \"Rename\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => handleDelete(chat.sessionId),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)]\n        }, chat.sessionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), hasMore && !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"load-more\",\n        onClick: () => fetchChats(true),\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading more chats...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 23\n      }, this), !hasMore && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No more chats available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"YMjy5L+jNKZe7BU3Beib/15BzgY=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useState","useRef","assets","axios","account","jsxDEV","_jsxDEV","Sidebar","onNewChat","onChatSelect","_s","extended","setExtended","chats","setChats","selectedChat","setSelectedChat","loading","setLoading","userId","setUserId","offset","setOffset","hasMore","setHasMore","menuOpen","setMenuOpen","dropdownRef","fetchUserId","user","get","$id","error","console","fetchChats","loadMore","response","post","chatList","newOffset","data","prevChats","length","fetchChatDetails","chatId","sessionId","conversation","handleMenuClick","prev","handleRename","log","handleDelete","success","filter","chat","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","children","onClick","src","menu_icon","alt","fileName","_jsxFileName","lineNumber","columnNumber","plus_icon","map","title","ref","width","height","viewBox","fill","xmlns","cx","cy","r","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Project_Blog/MechanicAI_2/frontend/src/components/sidebar/sidebar.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useEffect, useState, useRef } from \"react\";\r\n// import \"./sidebar.css\";\r\n// import { assets } from \"../../assets/assets\";\r\n// import axios from \"axios\";\r\n// import { account } from \"../../appwrite\"; // Import the account object from Appwrite.js\r\n\r\n// const Sidebar = ({ onNewChat, onChatSelect }) => {\r\n//   const [extended, setExtended] = useState(false);\r\n//   const [chats, setChats] = useState([]); // Chat sessions\r\n//   const [selectedChat, setSelectedChat] = useState(null); // Selected chat details\r\n//   const [loading, setLoading] = useState(false); // Loading state\r\n//   const [userId, setUserId] = useState(null); // User ID\r\n//   const [offset, setOffset] = useState(0); // Offset for chat pagination\r\n//   const [hasMore, setHasMore] = useState(true); // Flag to check if more chats are available\r\n\r\n//   useEffect(() => {\r\n//     const fetchUserId = async () => {\r\n//       try {\r\n//         const user = await account.get(); // Fetch the logged-in user from Appwrite\r\n//         setUserId(user?.$id || null); // Save the userId\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchUserId();\r\n//   }, []);\r\n\r\n//   // Fetch chat sessions with pagination\r\n//   const fetchChats = async (loadMore = false) => {\r\n//     if (!userId || loading || (!hasMore && loadMore)) return;\r\n\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await axios.post(\"http://localhost:5000/api/chats\", { userId, offset });\r\n//       const { chatList, offset: newOffset } = response.data;\r\n\r\n//       if (loadMore) {\r\n//         setChats((prevChats) => [...prevChats, ...chatList]); // Append new chats\r\n//       } else {\r\n//         setChats(chatList); // Set initial chats\r\n//       }\r\n\r\n//       setOffset(newOffset); // Update offset for the next call\r\n//       setHasMore(chatList.length === 10); // If less than 10 items, no more chats\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching chats:\", error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Initial fetch\r\n//   useEffect(() => {\r\n//     if (userId) {\r\n//       fetchChats();\r\n//     }\r\n//   }, [userId]);\r\n\r\n//   const fetchChatDetails = async (chatId) => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await axios.post(\"http://localhost:5000/api/history\", {\r\n//         userId,\r\n//         sessionId: chatId,\r\n//       });\r\n//       if (response.data && response.data.conversation) {\r\n//         onChatSelect(response.data.conversation); // Pass conversation to App\r\n//         setSelectedChat(chatId); // Mark as selected\r\n//       } else {\r\n//         console.error(\"Invalid response structure:\", response.data);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching chat details:\", error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"sidebar\">\r\n//       <div className=\"top\">\r\n//         <img\r\n//           onClick={() => setExtended((prev) => !prev)}\r\n//           className=\"menu\"\r\n//           src={assets.menu_icon}\r\n//           alt=\"menu\"\r\n//         />\r\n//         <div className=\"new-chat\" onClick={onNewChat}>\r\n//           <img src={assets.plus_icon} alt=\"new chat\" />\r\n//           {extended ? <p>New Chat</p> : null}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {extended && (\r\n//         <div className=\"recent\">\r\n//           <p className=\"recent-title\">Recent</p>\r\n//           <div className=\"recent-list\">\r\n//             {chats.map((chat) => (\r\n//               <div\r\n//                 key={chat.sessionId}\r\n//                 className={`recent-entry ${selectedChat === chat.sessionId ? \"selected\" : \"\"}`}\r\n//                 onClick={() => fetchChatDetails(chat.sessionId)}\r\n//               >\r\n//                 <img src={assets.message_icon} alt=\"chat icon\" />\r\n//                 <p>{chat.title || \"Untitled Chat\"}</p>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//           {hasMore && !loading && (\r\n//             <button className=\"load-more\" onClick={() => fetchChats(true)}>\r\n//               Load More\r\n//             </button>\r\n//           )}\r\n//           {loading && <p>Loading more chats...</p>}\r\n//           {!hasMore && <p>No more chats available</p>}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Sidebar;\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { assets } from \"../../assets/assets\";\r\nimport axios from \"axios\";\r\nimport { account } from \"../../appwrite\";\r\n\r\nconst Sidebar = ({ onNewChat, onChatSelect }) => {\r\n  const [extended, setExtended] = useState(false);\r\n  const [chats, setChats] = useState([]); // Chat sessions\r\n  const [selectedChat, setSelectedChat] = useState(null); // Selected chat details\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const [userId, setUserId] = useState(null); // User ID\r\n  const [offset, setOffset] = useState(0); // Offset for chat pagination\r\n  const [hasMore, setHasMore] = useState(true); // Flag to check if more chats are available\r\n  const [menuOpen, setMenuOpen] = useState(null); // Track open menu for each chat\r\n  const dropdownRef = useRef(null); // Reference to dropdown\r\n\r\n  useEffect(() => {\r\n    const fetchUserId = async () => {\r\n      try {\r\n        const user = await account.get(); // Fetch the logged-in user from Appwrite\r\n        setUserId(user?.$id || null); // Save the userId\r\n      } catch (error) {\r\n        console.error(\"Error fetching user:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserId();\r\n  }, []);\r\n\r\n  // Fetch chat sessions with pagination\r\n  const fetchChats = async (loadMore = false) => {\r\n    if (!userId || loading || (!hasMore && loadMore)) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\"http://localhost:5000/api/chats\", {\r\n        userId,\r\n        offset,\r\n      });\r\n      const { chatList, offset: newOffset } = response.data;\r\n\r\n      if (loadMore) {\r\n        setChats((prevChats) => [...prevChats, ...chatList]); // Append new chats\r\n      } else {\r\n        setChats(chatList); // Set initial chats\r\n      }\r\n\r\n      setOffset(newOffset); // Update offset for the next call\r\n      setHasMore(chatList.length === 10); // If less than 10 items, no more chats\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchChats();\r\n    }\r\n  }, [userId]);\r\n\r\n  const fetchChatDetails = async (chatId) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\"http://localhost:5000/api/history\", {\r\n        userId,\r\n        sessionId: chatId,\r\n      });\r\n      if (response.data && response.data.conversation) {\r\n        onChatSelect(response.data.conversation); // Pass conversation to App\r\n        setSelectedChat(chatId); // Mark as selected\r\n      } else {\r\n        console.error(\"Invalid response structure:\", response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chat details:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMenuClick = (chatId) => {\r\n    setMenuOpen((prev) => (prev === chatId ? null : chatId)); // Toggle menu\r\n  };\r\n\r\n  const handleRename = (chatId) => {\r\n    console.log(\"Rename chat:\", chatId);\r\n    setMenuOpen(null); // Close the menu\r\n  };\r\n\r\n  // const handleDelete = (chatId) => {\r\n  //   console.log(\"Delete chat:\", chatId);\r\n  //   setMenuOpen(null); // Close the menu\r\n  // };\r\n\r\n  const handleDelete = async (chatId) => {\r\n    try {\r\n      setLoading(true); // Set loading state while deleting\r\n      // Make a POST request to the backend to delete the chat\r\n      const response = await axios.post(\"http://localhost:5000/api/delete\", {\r\n        userId,\r\n        sessionId: chatId, // Send the chatId to the backend for deletion\r\n      });\r\n  \r\n      if (response.data.success) {\r\n        // Successfully deleted chat, remove it from the UI\r\n        setChats((prevChats) => prevChats.filter((chat) => chat.sessionId !== chatId));\r\n        setSelectedChat(null); // Deselect the deleted chat\r\n      } else {\r\n        console.error(\"Failed to delete the chat:\", response.data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting chat:\", error);\r\n    } finally {\r\n      setMenuOpen(null); // Close the menu\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n  \r\n  // Close dropdown on outside click\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setMenuOpen(null); // Close the menu\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"top\">\r\n        <img\r\n          onClick={() => setExtended((prev) => !prev)}\r\n          className=\"menu\"\r\n          src={assets.menu_icon}\r\n          alt=\"menu\"\r\n        />\r\n        <div className=\"new-chat\" onClick={onNewChat}>\r\n          <img src={assets.plus_icon} alt=\"new chat\" />\r\n          {extended ? <p>New Chat</p> : null}\r\n        </div>\r\n      </div>\r\n\r\n      {extended && (\r\n        <div className=\"recent\">\r\n          <p className=\"recent-title\">Recent</p>\r\n          <div className=\"recent-list\">\r\n            {chats.map((chat) => (\r\n              <div key={chat.sessionId} className=\"recent-entry\">\r\n                <div\r\n                  className={`chat-content ${\r\n                    selectedChat === chat.sessionId ? \"selected\" : \"\"\r\n                  }`}\r\n                  onClick={() => fetchChatDetails(chat.sessionId)}\r\n                >\r\n                  <p>{chat.title || \"Untitled Chat\"}</p>\r\n                </div>\r\n                <div className=\"menu-icon\" ref={dropdownRef}>\r\n                  <svg\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    onClick={() => handleMenuClick(chat.sessionId)}\r\n                  >\r\n                    {/* <circle cx=\"12\" cy=\"5\" r=\"2\" fill=\"#bbb\" />\r\n                    <circle cx=\"12\" cy=\"12\" r=\"2\" fill=\"#bbb\" />\r\n                    <circle cx=\"12\" cy=\"19\" r=\"2\" fill=\"#bbb\" /> */}\r\n                    <circle cx=\"12\" cy=\"5\" r=\"2\" fill=\"black\" />\r\n                    <circle cx=\"12\" cy=\"12\" r=\"2\" fill=\"black\" />\r\n                    <circle cx=\"12\" cy=\"19\" r=\"2\" fill=\"black\" />\r\n                  </svg>\r\n                  {menuOpen === chat.sessionId && (\r\n                    <div className=\"menu-dropdown\">\r\n                      <p onClick={() => handleRename(chat.sessionId)}>Rename</p>\r\n                      <p onClick={() => handleDelete(chat.sessionId)}>Delete</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {hasMore && !loading && (\r\n            <button className=\"load-more\" onClick={() => fetchChats(true)}>\r\n              Load More\r\n            </button>\r\n          )}\r\n          {loading && <p>Loading more chats...</p>}\r\n          {!hasMore && <p>No more chats available</p>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}